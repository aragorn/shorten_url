#!/usr/bin/perl -w

use Benchmark;
use Time::HiRes qw(gettimeofday tv_interval);
my ($t1, $t01, $t2, $t02) = (new Benchmark, [gettimeofday]);
use strict;
use warnings;
use utf8;
use CGI qw(:standard escape escapeHTML -oldstyle_urls);
use LWP::Simple qw(!head);
use XML::Simple;
$XML::Simple::PREFERRED_PARSER="XML::Parser";
use Unicode::String qw(utf8);
use Data::Dumper;
#use Daum::ShortenURL;

our @DEBUG;
binmode STDOUT, ":encoding(UTF-8)";
#my $cp949 = new Unicode::Map("cp949");
($t2, $t02) = (new Benchmark, [gettimeofday]);
push @DEBUG, "elapsed time 1=".tv_interval($t01, $t02)."secs";

#my $base_url = "http://10.31.125.234:7777/front/search.py?enc=utf8&q=%s";
my $image_url_default = "http://archive.search.daum-img.net/twitter.com/beyond_00.png";
my $base_url = "http://10.30.144.200:7777/front/search.py?enc=utf8&n=200&q=%s&p=%s";
my $parser  = new XML::Simple;
my $q       = new CGI; $q->charset('utf-8'); # for proper escapeHTML
my $query   = param('q') || ""; utf8::decode($query);
my $page    = param('p') || "1";
my $where   = param('w') || "tot";

#my $query_cp949   = $cp949->from_unicode(utf8($query));

print $q->header(-charset=>'utf-8', -type=>'text/html');

=rem
print $q->header(-charset=>'cp949', -type=>'text/html');

print p({class=>'debug'}, "query=$query,query_cp949=$query_cp949");
print "query($query) is utf8" if utf8::is_utf8($query);
print "query($query) is not utf8" unless utf8::is_utf8($query);
print "<br/>";
my $decoded = $query_cp949; utf8::decode($decoded);
print "query($decoded) is utf8" if utf8::is_utf8($decoded);
print "query($decoded) is not utf8" unless utf8::is_utf8($decoded);
=cut

($t2, $t02) = (new Benchmark, [gettimeofday]);
push @DEBUG, "elapsed time 2=".tv_interval($t01, $t02)."secs";
#my $search_url = sprintf($base_url, escape($query_cp949), $page);
my $search_url = sprintf($base_url, escape($query), $page); # unless utf8::is_utf8($query);
my $xml = LWP::Simple::get($search_url);
($t2, $t02) = (new Benchmark, [gettimeofday]);
push @DEBUG, "elapsed time 3=".tv_interval($t01, $t02)."secs";
my $result = $parser->XMLin($xml, noattr=>1, suppressempty=>1);
($t2, $t02) = (new Benchmark, [gettimeofday]);
push @DEBUG, "elapsed time 4=".tv_interval($t01, $t02)."secs";

my ($total_count, $page_count, @list) = parse_xml_result($result);

print <<END;
<!-- 소셜웹Coll -->
<style type="text/css">
#snsColl .collTitle {overflow:visible;margin-bottom:12px;}
/*
#snsColl #snsList {
    overflow-y:auto;overflow-x:hidden;height:250px;margin-top:10px;
    scrollbar-face-color:#FEFEFE;
    scrollbar-shadow-color:#fff;
    scrollbar-highlight-color:#fff;
    scrollbar-3dlight-color:#DEDEDE;
    scrollbar-darkshadow-color:#dedede;
    scrollbar-track-color:#F7F7F7;
    scrollbar-arrow-color:#929292;
}
*/
#snsColl li {display:block;float:left;width:692px;}
#snsColl li.write {height:0px;margin-bottom:0px;overflow:hidden;line-height:0px;font-size:0px;}
#snsColl li .divAniBox {width:100%;padding-bottom:18px;line-height:16px;}
#snsColl li .thumb {margin-right:7px;}
#snsColl li .thumb img {border:1px solid #ECECEC;}
#snsColl li .desc {padding-top:2px;line-height:18px;}
#snsColl li .info {padding-top:2px;font:12px/13px AppleGothic,gulim,sans-serif;}

/*
#snsColl li .commentBox {float:left;width:635px;background:url("http://imgsrc.search.daum-img.net/search_all/2009/image/bg_realsearch.gif") repeat-y -630px 0px;}
#snsColl li .commentBody {padding:0px 15px 0px 15px;background:url("http://imgsrc.search.daum-img.net/search_all/2009/image/bg_realsearch.gif") no-repeat 0px 0px;}
#snsColl li .commentFoot {width:100%;height:10px;font-size:0px;line-height:0px;background:url("http://imgsrc.search.daum-img.net/search_all/2009/image/bg_realsearch.gif") no-repeat -1260px bottom;}
*/

#snsColl li .commentBox {float:left;width:635px; }
#snsColl li .commentBody {padding:0px 15px 0px 15px; }
#snsColl li .commentFoot {width:100%;height:10px;font-size:0px;line-height:0px; }

#snsColl li .commentBody .desc {padding-top:8px;line-height:18px;}
* html #snsColl li .commentBody .desc {padding-top:9px;}
#snsColl li .commentBody .info {padding-top:2px;font:12px/13px AppleGothic,gulim,sans-serif;}
#snsColl li .textBox {padding-top:3px;}
#snsColl li .getTime {color:#6671FF;font-size:12px;text-decoration: none;}
#snsColl li a.getTime:hover {text-decoration: underline;}
#snsColl li a.getTime:hover span {text-decoration: underline;}
#snsColl li .nick {color:#7A7A7A;}
#snsColl li .source {color:#7A7A7A;}
#snsColl li .vline {font-size:11px;}

#snsColl li .icoYozm {padding-left:14px;padding-bottom:1px;background: url("http://imgsrc.search.daum-img.net/search_all/2010/icon/ico_svico.gif") no-repeat -2px 0px;}
#snsColl li .icoMetwo {padding-left:16px;background: url("http://imgsrc.search.daum-img.net/search_all/2010/icon/ico_svico.gif") no-repeat 0px -34px;}
#snsColl li .icoTwitter {padding-left:13px;padding-top:1px;background: url("http://imgsrc.search.daum-img.net/search_all/2010/icon/ico_svico.gif") no-repeat -2px -66px;}

#snsColl #btnRealTimeRun1, #snsColl #btnRealTimeRun2 {text-decoration: none;font:12px dotum;letter-spacing: -1px}
#snsColl #btnRealTimeRun1:hover, #snsColl #btnRealTimeRun2:hover {text-decoration: underline;}
#snsColl .hide {display:none !important;}

#snsColl .relationTip {margin-top:21px;padding-top:14px;border-top:1px solid #ECECEC;}
* html #snsColl .relationTip {padding-top:15px;}
#snsColl .relationTip p b {color:#0307C3;}
#snsColl #statusRealTimeRun {margin-left:11px;font-weight:normal;font-family: dotum;letter-spacing: -1px}

#clusterResultUL .cpLink {margin-top:2px;} 
#clusterResultUL span.cluster.fst {margin-top:7px;} 
#clusterResultUL .cluster {
margin-top:6px;padding-left:13px;
background:url("http://imgsrc.search.daum-img.net/search_all/2009/icon/cb_search_icon_2009.gif") no-repeat 1px -860px}
#clusterResultUL .cluster_more {
margin-top:6px;display:inline-block;color:#6671FF;font-size:12px;margin-left:13px;}
/*#clusterResultUL .mlink {
width:auto;margin-left:0;font-size:12px;font-family:AppleGothic,"새굴림","굴림",gulim,sans-serif;vertical-align:0;}*/
#clusterResultUL.uccUl li {margin-top:18px;} 
#clusterResultUL.uccUl li.fst {margin-top:0;} 
#newsColl .mlink {
width:auto;margin-left:0;font-size:12px;
font-family:AppleGothic,"새굴림","굴림",gulim,sans-serif;
padding-top:0px;vertical-align:0;
letter-spacing:0;
background:transparent url(http://imgsrc.search.daum-img.net/search_all/2009/icon/search_icon_2009.gif) no-repeat scroll 62px -2012px;}
#newsColl ul.uccUl dd span.tit.mainTit {float:left;margin-bottom:3px;}
#newsColl .mlink.viewLink {background-position:30px -2012px; padding:0px 21px 0 0;text-decoration:none;}
#newsColl .mlink:visited {text-decoration:none !important;}
#newsColl .mlink:hover {text-decoration:underline !important;}

#snsColl .collTot {margin-left: 17px;}

#DFMiniSlider {display:inline;margin-left:13px;}
#DFMiniSlider #sliderWrap {padding:0;border-bottom:0;}
#DFMiniSlider #sliderWrap .sliderWrap {float:left;position:relative;width:106px;height:20px;}
#DFMiniSlider #sliderWrap .sliderWrap .handle {width:16px;height:15px;cursor:pointer;}
#DFMiniSlider #sliderWrap .sliderWrap .handle img {position:relative;top:1px;}
#DFMiniSlider #sliderWrap .sliderWrap #sliderHandle.handle img {left:-6px;}
#DFMiniSlider #sliderWrap .sliderWrap #sliderHandle2.handle img {left:0px;}
#DFMiniSlider #sliderWrap .sliderWrap #activeBg {position:absolute;left:20px;height:3px;top:4px;background:url(http://img-contents.daum-img.net/movie/2008_home/photo/img_slide_on.gif) repeat-x;font-size:0;cursor:pointer;}
#DFMiniSlider #sliderWrap .sliderWrap #track5 {width:106px;height:17px;background:url(http://imgsrc.search.daum-img.net/search_all/2009/image/img_timeline_bar.gif) no-repeat 0 -84px;cursor:pointer;}
#DFMiniSlider #sliderWrap .leftTxt {float:left;margin-right:18px;margin-top:2px;white-space:nowrap;}
#DFMiniSlider #sliderWrap .rightTxt {float:left;margin-left:10px;margin-top:1px;white-space:nowrap;}
 
#DFMiniSlider .tooltip {position:absolute;width:81px;height:24px;background:url('http://imgsrc.search.daum-img.net/search_all/2009/image/rank_tooltip.gif') no-repeat 0 0;}
#DFMiniSlider .tooltip.r0 {top:-23px;left:-40px;background-position:0 0;}
#DFMiniSlider .tooltip.r1 {top:-23px;left:-14px;background-position:0 -59px;}
#DFMiniSlider .tooltip.r2 {top:-23px;left:12px;background-position:0 -118px;}
#DFMiniSlider .tooltip.r3 {top:-23px;left:38px;background-position:0 -177px;}
#DFMiniSlider .tooltip.r4 {top:-23px;left:64px;background-position:0 -236px;}

</style>
END

if ($where eq "tot")
{
print <<END;
<div id="snsColl">
 <div class="collTitle">
   <h2 class="fL">소셜웹</h2>
 </div>
 <div class="collTot" style="height: inherit;">
  <ul id="snsList" style="height: inherit;">
END
} else {
  my $slider = html_DFMiniSlider();
print <<END;
<div id="snsColl">
 <div class="collTitle">
   <h2 class="mt2 fL">소셜웹</h2>
   <span class="fL">$slider</span>
   <span id="resultCntArea" class="titleLinkFr">&nbsp;
     <em class="nrl g_tit">1-10 / 총 57,876건</em></span>
   <div class="clr"></div>
 </div>
 <div class="collTot" style="height: inherit;">
  <ul id="snsList">
END
}

foreach my $doc ( map(+( $list[$_] ), 0..3) )
{
  my ($docid, $edocid, $content, $url, $image_url, $channel_url, $writedttm, $sns_name )
   = map { utf8::decode($doc->{$_}); $doc->{$_} || "" }
       qw(docid edocid content url image_url channel_url writedttm sns_name);
  my $twitter_link = "트위터 원문보기";
  $image_url = $image_url_default unless $image_url;
  my @clusters;
  @clusters = @{ $doc->{clusters}->{data} }
    if defined $doc->{clusters} and defined $doc->{clusters}->{data}
       and ref $doc->{clusters}->{data} eq "ARRAY";
  print <<END;
<!--BEGIN-->
<li>
 <!--div class="divAniBox"-->
  <div class="thumb fL">
   <a href="$channel_url" target="_blank"><img src="$image_url" width="48" height="48" alt/></a>
  </div>
  <div class="commentBox">
    <div class="commentBody">
      <p class="base desc">$content</p>
      <p class="info">
        <a href="$channel_url" target="_blank" class="getTime">
          <span id="getRealIndexTime_0" class="getTime">
          <script type="text/javascript">try{document.write(_jsMakeRealTimeDate(''));}catch(e){}</script>
          </span>
        </a>
        <span class="vline">|</span>
        <span class="nick">
          <a href="$channel_url" target="_blank" class="g_tit">$sns_name</a>
        </span>
        <span class="vline">|</span>
        <span class="source icoTwitter">
          <a href="$channel_url" target="_blank" class="g_tit">$twitter_link</a>
        </span>
      </p>
END

  print qq(<ul class="cluster">\n) if @clusters > 0;
  foreach my $clustered ( @clusters )
  {
    my ($docid, $edocid, $content, $url, $image_url, $channel_url, $writedttm, $sns_name )
     = map { utf8::decode($clustered->{$_}); $clustered->{$_} || "" }
       qw(docid edocid content url image_url channel_url writedttm sns_name);
    print <<END;
      <li>$content
        <a href="$channel_url" target="_blank" class="getTime">
          <span id="getRealIndexTime_0" class="getTime">
          <script type="text/javascript">try{document.write(_jsMakeRealTimeDate(''));}catch(e){}</script>
          </span>
        </a>
        <span class="vline">|</span>
        <span class="nick">
          <a href="$channel_url" target="_blank" class="g_tit">$sns_name</a>
        </span>
      </li>
END
  }
  print qq(</ul>\n) if @clusters > 0;

  print <<END
    </div>
    <div class="commentFoot"></div>
  </div>
  <div class="clr"></div>
 <!--/div--divAniBox-->
</li>
<!--END-->
END
}

if ($where eq "tot")
{
  my $query_escaped = escape($query);
  print <<END;
  <div class="clr"></div>
  </ul><!--id=snsList"-->
 </div>
 <div class="moreArea">
   <a href="?w=dir&m=sns&q=$query_escaped">소셜웹 더보기</a>
 </div>
</div>
<!-- end 소셜웹Coll -->
<!-- 구분라인 -->
<div id="line"></div>
<hr>
<!-- end 구분라인 -->
END
} else {
  print <<END;
  <div class="clr"></div>
  </ul><!--id=snsList"-->
 </div>
</div>
<!-- end 소셜웹Coll -->
END
}

#print pre(Dumper($result));

($t2, $t02) = (new Benchmark, [gettimeofday]);
print p({class=>'debug'}, "elapsed time=", tv_interval($t01, $t02), "secs")."\n";
print p({class=>'debug'}, "benchmark=", timestr(timediff($t2, $t1)))."\n";
if ($q->self_url =~ m/debug/) {
  foreach ( @DEBUG ) { print p({class=>'debug'}, $_); }
  my $reload_link = $q->unescape($q->script_name ."?". $q->query_string); utf8::decode($reload_link);
  print p({class=>'debug'}, "reload ",
          a({href=>"?".$q->query_string}, $reload_link));
}
print <<END;
<div id="line"></div>
<hr>
END

exit;

sub parse_xml_result
{
  my $result = shift;
  my $total_count = 0;
  my $page_count = 0;
  my @list = ();
  if ( defined $result->{m} )
  {
    $total_count = $result->{m}->{c};
    $page_count  = $result->{m}->{pc};
  }
  if ( defined $result->{ds} )
  {
    @list = @{ $result->{ds}->{data} };
  }

  return ($total_count, $page_count, @list);
}

sub html_DFMiniSlider
{
  return <<'END';

<div id="DFMiniSlider" class="DFMiniSlider fL">
  <div id="sliderWrap">
    <div id="rankSelTxtArea1" class="leftTxt fwn fs12 "><img class="valign" src="http://imgsrc.search.daum-img.net/search_all/2009/icon/icon_check.gif" width="11" height="12"> 정확도 <span class="vline"> | </span><a id="rankSelTxtRecen" href="javascript:;" class="stit_nv">최신</a></div>
    <div id="rankSelTxtArea2" class="leftTxt fwn fs12 hide"><a id="rankSelTxtAccu" href="javascript:;" class="stit_nv bulletDot">정확도</a><span class="vline"> | </span><img class="valign" src="http://imgsrc.search.daum-img.net/search_all/2009/icon/icon_check.gif" width="11" height="12"> 최신</div>
    <div class="sliderWrap">
      <div id="track5"></div>
      <div id="sliderHandle" class="handle hide"><img src="http://imgsrc.search.daum-img.net/search_all/2009/btn/btn_lank_cursor.gif" width="13" height="17"></div>
      <div id="rankSliderTooltip" class="hide"></div>
    </div>
  </div>
</div>

<script type="text/javascript" defer="defer"> 
var rankingSlider = (function(){
  // 핸들러 ID
  var handleId = "sliderHandle";
 
  // 정확도 최신 showhide 영역 Element
  var rankSelTxtArea1El = daumSF.$E("rankSelTxtArea1");
  var rankSelTxtArea2El = daumSF.$E("rankSelTxtArea2");
  // 정확도 최신 Element
  var rankSelTxtRecenEl = daumSF.$E("rankSelTxtRecen");
  var rankSelTxtAccuEl = daumSF.$E("rankSelTxtAccu");
  // 랭킹슬라이더툴팁 Element
  var rankSliderTooltipEl = daumSF.$("rankSliderTooltip");
 
  // track의 총길이
  var trackLength = 106;
  // 촤우측 이동공간 영역 설정
  var handleLeftScopeStart = 0;
  var handleRightScopeEnd = trackLength;
 
  // 년도 기준
  var startIdx = 1;
  var endIdx = 5;
 
  // 기타요소 객체
  var track = daumSF.$("track5");
 
  // 화면 초기화
  var init = function(){
    daumSF.$(handleId).style.display="block";
    //graduation(startYear);
  };
 
  // 위치값으로 인덱스 계산
  var getIdxByPos = function( pos ){
    var distIdx = endIdx - startIdx;
    var distPos = handleRightScopeEnd - handleLeftScopeStart;
    var idxPerPixel = distIdx / distPos;
    var result = startIdx + Math.floor( idxPerPixel * ( pos - handleLeftScopeStart ) );
    return result;
  };
 
  // 인덱스값으로 위치값 계산
  var getPosByIdx = function( idx ){
    var distIdx = endIdx - startIdx;
    var distPos = handleRightScopeEnd - handleLeftScopeStart;
    var pixelPerIdx = distPos / distIdx ;
    var result = Math.floor( pixelPerIdx * ( idx - startIdx ) );
    return result;
  };
 
  // 초기값 설정
 
  var initIdxValue="3"
  if(daumSF.getParam("sort")) {
    if(daumSF.getParam("sort")=="" || daumSF.getParam("sort")=="step1" || daumSF.getParam("sort")=="recency" || daumSF.getParam("sort")=="rrecency") initIdxValue="5"
    else if(daumSF.getParam("sort")=="step2") initIdxValue="4";
    else if(daumSF.getParam("sort")=="step3") initIdxValue="3";
    else if(daumSF.getParam("sort")=="step4") initIdxValue="2";
    else if(daumSF.getParam("sort")=="step5" || daumSF.getParam("sort")=="accuracy") initIdxValue="1";
  }
  var handleInitPos = getPosByIdx( initIdxValue );
 
  var toolTipTimeOutId;
  var setTooltipBox = function(_idx){
    rankSliderTooltipEl.className = "tooltip r"+_idx;
    rankSliderTooltipEl.style.display="block";
  }
  var hideTooltip = function(){
    rankSliderTooltipEl.style.display="none";
  }
 
  // 좌측 핸들러 정의
  var handle = daumSF.widget.slider( handleId );
  handle.setScopeX({
    init : handleInitPos
  }).addEventListener({
    type : "onMouseDown",
    func : function(){
      handle.setScopeX({
        start : handleLeftScopeStart,
        end : handleRightScopeEnd
      });
    }
  }).addEventListener({
    type : "onMouseMove",
    func : function(){
      setTooltipBox(Math.round(handle.getPos().left/(trackLength/4)));
    }
  }).addEventListener({
    type : "onMouseUp",
    func : function(){
      handle.setPosX((Math.round(handle.getPos().left/(trackLength/4))*26));
      _jsSearchByTune(Math.round(handle.getPos().left/(trackLength/4)));
    }
  }).addEventListener({
    type : "onMouseOut",
    func : function(){
      toolTipTimeOutId = setTimeout('daumSF.$E("rankSliderTooltip").style.display="none"',2000);
    }
  }).addEventListener({
    type : "onMouseOver",
    func : function(){
      setTooltipBox(Math.round(handle.getPos().left/(trackLength/4)));
    }
  }).run();
 
  // 트랙 정의
  daumSF.Event.addEvent( track, "mousedown", function(e){
    var coords = daumSF.getCoords( track.id );
    var startX = e.clientX;
    var origX = this.offsetLeft + coords.left;
    var deltaX = startX - origX;
    handle.setPosX((Math.round(deltaX/(trackLength/4))*26));
    track.focus();
    _jsSearchByTune(Math.round(handle.getPos().left/(trackLength/4)));
  }, false );
  daumSF.Event.addEvent( track, "mousemove", function(e){
    var coords = daumSF.getCoords( track.id );
    var startX = e.clientX;
    var origX = this.offsetLeft + coords.left;
    var deltaX = startX - origX;
    setTooltipBox(Math.round(deltaX/(trackLength/4)));
  }, false );
  daumSF.Event.addEvent( track, "mouseout", function(e){
    toolTipTimeOutId = setTimeout('daumSF.$E("rankSliderTooltip").style.display="none"',2000);
  }, false );
 
  // 최신 클릭
  daumSF.addEvent( rankSelTxtRecenEl, "click", function(ev){
    var target = daumSF.getElement( ev );
    handle.setPosX(getPosByIdx(5));
    rankSelTxtArea1El.style.display="none";
    rankSelTxtArea2El.style.display="block";
    _jsSearchByTune(4);
    smartLog(this, "s=BL&a=RKBL&pg=1&r=1&p=6&rc=1", null);
    return gLink(null, "RKBL", "1", "6");
  }, false );
  // 정확도 클릭
  daumSF.addEvent( rankSelTxtAccuEl, "click", function(ev){
    var target = daumSF.getElement( ev );
    handle.setPosX(getPosByIdx(3));
    rankSelTxtArea1El.style.display="block";
    rankSelTxtArea2El.style.display="none";
    _jsSearchByTune(2);
    smartLog(this, "s=BL&a=RKBL&pg=1&r=1&p=7&rc=1", null);
    return gLink(null, "RKBL", "1", "7");
  }, false );
 
  init();
 
})();
 
function _jsSearchByTune(_opt){
  var sType = "";
  switch(_opt){
    case 0 :
      sType="step5";
      break;
    case 1 :
      sType="step4";
      break;
    case 2 :
      sType="step3";
      break;
    case 3 :
      sType="step2";
      break;
    case 4 :
      sType="step1";
      break;
  }
  if(_opt >=3){
    daumSF.$E("rankSelTxtArea1").style.display="none";
    daumSF.$E("rankSelTxtArea2").style.display="block";
  }else{
    daumSF.$E("rankSelTxtArea1").style.display="block";
    daumSF.$E("rankSelTxtArea2").style.display="none";
  }
  blogParameters.sort = sType;
  doSearchByAjax();
}
 
function _chgSortOrder(_opt){
  if(_opt==0){
    //과거순
    blogParameters.sort = "rrecency";
    daumSF.$E("sortBtnOldOrder").style.display="none";
    daumSF.$E("sortBtnNewOrder").style.display="block";
    doSearchByAjax();
  }else if(_opt==1){
    //최신순
    blogParameters.sort = "step1";
    daumSF.$E("sortBtnOldOrder").style.display="block";
    daumSF.$E("sortBtnNewOrder").style.display="none";
    doSearchByAjax();
  }
}
</script>
END

}
