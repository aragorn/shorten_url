#!/bin/bash

set -o nounset
set -o errexit

VERBOSE_MODE=0

function error_handler()
{
  local STATUS=${1:-1}
  [ ${VERBOSE_MODE} == 0 ] && exit ${STATUS}
  echo "Exits abnormally at line "`caller 0`
  exit ${STATUS}
}
trap "error_handler" ERR

PROGNAME=`basename ${BASH_SOURCE}`
DRY_RUN_MODE=0
SEM_CMD=""

function print_usage_and_exit()
{
  local STATUS=$1
  echo "Usage: ${PROGNAME} [-v] [-v] [--dry-run] [-h] [--help]"
  echo ""
  echo " Options -"
  echo "  -v                 enables verbose mode 1"
  echo "  -v -v              enables verbose mode 2"
  echo "      --dry-run      show what would have been dumped"
  echo "  -h, --help         shows this help message"
  exit ${STATUS:-0}
}

function check_sem {
  sem 2>/dev/null || return 1
  return 0
}

GETOPT=`getopt -o vh --long dry-run,help -n '${PROGNAME}' -- "$@"`
if [ $? != 0 ] ; then print_usage_and_exit 1; fi

eval set -- "${GETOPT}"

while true
do case "$1" in
     -v)            let VERBOSE_MODE+=1; shift;;
     --dry-run)     DRY_RUN_MODE=1; shift;;
     -h|--help)     print_usage_and_exit 0;;
     --)         shift; break;;
     *) echo "Internal error!"; exit 1;;
   esac
done

if (( VERBOSE_MODE > 2 )); then
  set -x
fi

check_sem && SEM_CMD="sem -j+0 -i $$" # "--load +2"

for FILE in sorted_000000000 
#for FILE in sorted_000000000 sorted_000500000 
#for FILE in sorted_*
do
  UNIQUE_FILE=${FILE/#sorted/unique}
  #set -x
  TIMESTAMP_ORIG=`stat -c%y ${FILE}`
  TIMESTAMP_UNIQUE="undefined"
  [ -r ${UNIQUE_FILE} ] && TIMESTAMP_UNIQUE=`stat -c%y ${UNIQUE_FILE} 2>/dev/null`
  [ "x${TIMESTAMP_ORIG}" == "x${TIMESTAMP_UNIQUE}" ] && continue

  #url_id	shorten_url	original_url	mime_type	original_title	website	created_on	updated_on	http_code	source
  #set -x
  cat ${FILE} | awk 'BEGIN {
    FS="\t"
    OFS="\t"
    count=0
    prev_website=""
};
{
  if ( website == prev_website ) {
    lines[count++] = $0;
  } else {
    for ( i in lines )
      print count, lines[i]
    delete lines
    count=0
    lines[count++] = $0;
    prev_website = website
  }
  #print id, surl, ourl, mime, title, website, ctime, utime, http, source;
};
END {
  for ( i in lines )
    print count, lines[i]
}
'  > ${UNIQUE_FILE}
#' | uniq -c -f4 | sort -nr
  #print $id, $surl, $ourl, $mime, $title, $website, $ctime, $utime, $http, $source;

  #time sed '1d' < ${FILE} | sort -S 200M -k6 -t'	' -s > ${UNIQUE_FILE}
  #time sort -S 200M -k6 -t'	' -s -o ${UNIQUE_FILE} ${FILE}
  touch -d "${TIMESTAMP_ORIG}" ${UNIQUE_FILE}
  rm -f ${UNIQUE_FILE}
  set +x
done

exit
