#!/bin/bash

set -o nounset
set -o errexit

VERBOSE_MODE=0

function error_handler()
{
  local STATUS=${1:-1}
  [ ${VERBOSE_MODE} == 0 ] && exit ${STATUS}
  echo "Exits abnormally at line "`caller 0`
  exit ${STATUS}
}
trap "error_handler" ERR

PROGNAME=`basename ${BASH_SOURCE}`
DRY_RUN_MODE=0
SEM_CMD=""

function print_usage_and_exit()
{
  local STATUS=$1
  echo "Usage: ${PROGNAME} [-v] [-v] [--dry-run] [-h] [--help]"
  echo ""
  echo " Options -"
  echo "  -v                 enables verbose mode 1"
  echo "  -v -v              enables verbose mode 2"
  echo "      --dry-run      show what would have been dumped"
  echo "  -h, --help         shows this help message"
  exit ${STATUS:-0}
}

function check_sem {
  sem 2>/dev/null || return 1
  return 0
}

GETOPT=`getopt -o vh --long dry-run,help -n '${PROGNAME}' -- "$@"`
if [ $? != 0 ] ; then print_usage_and_exit 1; fi

eval set -- "${GETOPT}"

while true
do case "$1" in
     -v)            let VERBOSE_MODE+=1; shift;;
     --dry-run)     DRY_RUN_MODE=1; shift;;
     -h|--help)     print_usage_and_exit 0;;
     --)         shift; break;;
     *) echo "Internal error!"; exit 1;;
   esac
done

if (( VERBOSE_MODE > 2 )); then
  set -x
fi

check_sem && SEM_CMD="sem -j+0 -i $$" # "--load +2"

MAX_URL_ID=$(mysql --batch --skip-column-names <<-END
  select max(url_id) from url_translation;
END
)

echo MAX_URL_ID=${MAX_URL_ID}
FETCH_COUNT=500000
MAX_URL_ID=1200000
URL_ID=0
until (( URL_ID > MAX_URL_ID ))
do
  (( START_ID=URL_ID ))
  (( END_ID=URL_ID+FETCH_COUNT-1 ))
  OUTPUT_FILE=`printf "data_%09d" ${URL_ID}`
  if [[ -r ${OUTPUT_FILE} ]];
  then
    LAST_URL_ID=`tail -1 ${OUTPUT_FILE} | awk '{ print $1; }'`
    #echo LAST_URL_ID=${LAST_URL_ID}
    if [[ ${LAST_URL_ID} == ${END_ID} ]];
    then
      echo "LAST_URL_ID(${LAST_URL_ID})=END_ID(${END_ID})"
      (( URL_ID += FETCH_COUNT ))
      continue
    fi
  fi

  echo mysql between ${START_ID} and ${END_ID}
  mysql --batch > ${OUTPUT_FILE} <<-END
	select * from url_translation where url_id between ${URL_ID} and ${END_ID};
END

  (( URL_ID += FETCH_COUNT ))

done
